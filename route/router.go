package route

import (
	"prueba-meli/api"
	_ "prueba-meli/docs" // docs is generated by Swag CLI, you have to import it.
	"strings"

	echoSwagger "github.com/swaggo/echo-swagger"

	"github.com/labstack/echo/v4"
	"github.com/labstack/echo/v4/middleware"
	"github.com/labstack/gommon/log"
)

// New Inicializaci√≥n del servidor
func New() *echo.Echo {
	e := echo.New()
	e.Logger.SetLevel(log.DEBUG)
	// Set Bundle MiddleWare
	e.Pre(middleware.RemoveTrailingSlash())
	e.Use(middleware.Logger())
	e.Use(middleware.GzipWithConfig(middleware.GzipConfig{
		Skipper: func(c echo.Context) bool {
			if strings.Contains(c.Request().URL.Path, "swagger") || strings.Contains(c.Request().URL.Path, "docs") {
				return true
			}
			return false
		},
	}))
	e.Use(middleware.CORSWithConfig(middleware.CORSConfig{
		AllowOrigins: []string{"*"},
		AllowHeaders: []string{echo.HeaderOrigin, echo.HeaderContentType, echo.HeaderAccept, echo.HeaderAuthorization},
		AllowMethods: []string{echo.GET, echo.HEAD, echo.PUT, echo.PATCH, echo.POST, echo.DELETE},
	}))
	e.Validator = NewValidator()

	// Routes
	v1 := e.Group("/api")
	{
		v1.GET("", api.IndexHandler)
		v1.GET("/clima", api.ClimaHandler)
		v1.GET("/simulacion", api.SimulacionHandler)
	}
	e.GET("/", echoSwagger.WrapHandler)

	return e
}
